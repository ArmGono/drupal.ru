<?php
/**
 * @file
 * Marketplace install file.
 */


/**
 * Implements hook_install().
 */
function marketplace_install() {
  node_types_rebuild();
  $types = node_type_get_types();

  node_add_body_field($types['organization'], t('Organization description'));

  foreach (_organization_installed_fields() as $field) {
    field_create_field($field);
  }
 
  foreach (_organization_installed_instances() as $instance) {
    field_create_instance($instance);
  }
}

/**
 * Fields for this module.
 */
function _organization_installed_fields() {
  $t = get_t();
  return array(
    'organization_logo' => array(
      'field_name' => 'organization_logo',
      'label' => $t('Logo'),
      'cardinality' => 1,
      'type' => 'image',
      'settings' => array(
        'default_image' => 0,
        'uri_scheme' => 'public',
      ),
    ),
    'organization_website' => array(
      'field_name' => 'organization_website',
      'label'  => $t('Website'),
      'cardinality' => 1,
      'type' => 'text',
      'settings' => array(
        'max_length' => 1000,
        'weight' => 1,
      ),
    ),
    'organization_address' => array(
      'field_name' => 'organization_address',
      'label'  => $t('Address'),
      'cardinality' => 1,
      'type' => 'text',
      'settings' => array(
        'max_length' => 1000,
      ),
    ),
    'organization_type' => array(
      'field_name' => 'organization_type',
      'type' => 'taxonomy_term_reference',
      'cardinality' => FIELD_CARDINALITY_UNLIMITED,
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => 'organizations',
            'parent' => 0,
          ),
        ),
      ),
    ),
  );
 
}

/**
 * Instances for this module.
 */
function _organization_installed_instances() {
  $t = get_t();
  return array( 
    'organization_logo' => array(
      'field_name' => 'organization_logo',
      'label'       => $t('Logo'),
      'cardinality' => 1,
      'bundle' => 'organization',
      'entity_type' => 'node',
      'description' => $t('Organization logo'),
      'type' => 'organization_logo',
      'settings' => array(
        'file_extensions' => 'png jpg jpeg',
        'file_directory' => 'organization',
        'max_filesize' => '1 MB',
        'alt_field' => 1,
        'title_field' => 1,
        'max_resolution' => '800x800',
        'min_resolution' => '400x400',
        'default_image' => 0,
      ),
      'widget' => array(
        'settings' => array(
          'preview_image_style' => 'thumbnail',
          'progress_indicator' => 'throbber',
          'weight' => -4,
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(),
          'weight' => -1,
          'module' => 'image',
        ),
        'teaser' => array(
          'label' => 'hidden',
          'type' => 'image',
          'settings' => array(),
          'weight' => -1,
          'module' => 'image',
        ),
      ),
    ),
    'organization_website' => array(
      'field_name' => 'organization_website',
      'label' => $t('Website'),
      'required' => TRUE,
      'cardinality' => 1,
      'bundle' => 'organization',
      'entity_type' => 'node',
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array('size' => 60),
        'weight' => 1,
      ),
    ),
    'organization_address' => array(
      'field_name' => 'organization_address',
      'label' => $t('Address'),
      'required' => FALSE,
      'cardinality' => 1,
      'bundle' => 'organization',
      'entity_type' => 'node',
      'description' => $t('Your company physical office address'),
      'widget' => array(
        'type' => 'text_textfield',
        'settings' => array('size' => 60),
        'weight' => 2,
      ),
    ),
    'organization_type' => array(
      'field_name' => 'organization_type',
      'bundle' => 'organization',
      'entity_type' => 'node',
      'label' => $t('Organizaition type'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
        'weight' => 3,
      ),
    ),
  );
}

/**
 * Implements hook_uninstall().
 */
function marketplace_uninstall() {
 
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'organization'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
 
  // Delete all the nodes at once
  node_delete_multiple($nids);
 
  $instance = array('field_name' => 'comment_body','bundle' => 'comment_node_organization','entity_type' => 'comment');
  field_delete_instance($instance);
 
  $instance = array('field_name' => 'body','bundle' => 'organization','entity_type' => 'node');
  field_delete_instance($instance);
 
   $fields = array_keys(_organization_installed_fields());
   foreach ($fields as $field) {
      field_delete_field($field);
  }
 
  // Purge all field infromation
   field_purge_batch(1000);
}
