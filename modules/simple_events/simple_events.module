<?php
/**
 * @file
 * Simple event module.
 */


/**
 * Implements hook_node_info()
 */
function simple_events_node_info() {
  return array(
    'simple_event' => array(
      'name' => t('Organization'),
      'base' => 'simple_events',
      'description' => t('Create event'),
      'has_title' => TRUE,
      'title_label' => t('Event title')
    )
  );
}

/**
 * Implement hook_form()
 */
function simple_events_form($node, $form_state) {
  $form = node_content_form($node, $form_state);
  
  $form['image'] = array(
    '#type' => 'file',
    '#title' => t('Event image'),
    '#description' => t('Click "Chose File" to select an image to upload. Allowed extensions:  jpg, jpeg, png '),
    '#weight' => -4,
  );

  if(isset($node->event->image)){
    $form['image']['#prefix'] = '<div class="current_logo">' .  theme('image', array('path' => $node->image->uri, 'attributes' => array('class' => 'organization-logo'))) . '</div>';
  }

  $dateformat = 'Y-m-d H:i';
  
  $form['time_from'] = array(
    '#type' => 'date_popup',
    '#date_timezone' => date_default_timezone(),
    '#date_format' => $dateformat,
    '#date_year_range' => '0:+1',
    '#title' => t('Start'),
    '#default_value' => format_date(REQUEST_TIME, 'custom', 'Y-m-d H:i'),
    '#required' => TRUE,
  );

  $form['time_to'] = array(
    '#type' => 'date_popup',
    '#date_timezone' => date_default_timezone(),
    '#date_format' => $dateformat,
    '#date_year_range' => '0:+1',
    '#title' => t('Start'),
    '#default_value' => format_date(REQUEST_TIME, 'custom', 'Y-m-d H:i'),
  );

  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => t('Website'),
    '#description' => t('Please provide event url.'),
    '#weight' => 1,
    '#default_value' => isset($node->event->url) ? $node->event->url : '',
  );

  $form['address'] = array(
    '#type' => 'textfield',
    '#title' => t('Address'),
    '#description' => t('If you have office address, please provide.'),
    '#weight' => 1,
    '#default_value' => isset($node->event->address) ? $node->event->address : '',
  );
  return $form;
}

/**
 * Implement hook_validate()
 */

function simple_events_validate($node, $form, &$form_state) {
  $logo_directory = file_default_scheme() . '://' . variable_get('simple_events_org_path', 'organization');

  file_prepare_directory($logo_directory, FILE_CREATE_DIRECTORY);

  $validators = array(
    'file_validate_is_image' => array(),
    'file_validate_extensions' => array(' jpg, jpeg, png')
  );

  //Save file
  if (!$file = file_save_upload('image', $validators, $logo_directory)){
    if(!$form_state['node']->image){
      form_set_error('logo', 'Could not upload file.');
    }
  }else{
    $form_state['values']['image'] = $file;
  }
}

/**
 * Implement hook_load()
 */

function simple_events_load($nodes) {
  $vids = array();
  foreach($nodes as $node){
    $vids[] = $node->vid;
  }
  
  $result = db_query('SELECT * FROM {simple_events} WHERE vid IN (:vids)', array(':vids' => $vids));
  foreach ($result as $record) {
    $nodes[$record->nid]->event = $record;
    $nodes[$record->nid]->event->image = file_load($record->image_fid);
  }
}

/**
 * Implement hook_insert()
 */
function simple_events_insert($node) {
  $fid = 0;
  if($node->image){
    $file = $node->image;
    $file->image = FILE_STATUS_PERMANENT;
    $file = file_save($file);
    $fid = $file->fid;
  }
  db_insert('simple_events')
    ->fields(array(
      'nid' => $node->nid,
      'vid' => $node->vid,
      'url' => $node->url,
      'address' => $node->address,
      'image_fid' => $fid,
    ))
    ->execute();
}

/**
 * Implement hook_update()
 */

function simple_events_update($node) {

  $fid = 0;

  if($node->original->event->image){
    $fid = $node->original->event->image->fid;
  }

  if($node->image){
    $file = $node->image;
    $file->status = FILE_STATUS_PERMANENT;
    $file = file_save($file);
    $fid = $file->fid;
    
    if($node->original->event->image){
      file_delete($node->original->event->image);
    }
  }
  
  db_update('simple_events')
    ->fields(array(
      'url' => $node->url,
      'address' => $node->address,
      'image_fid' => $fid,
    ))
    ->condition('vid', $node->vid)
    ->execute();
}

/**
 * Implement hook_view()
 */
 
function simple_events_view($node, $view_mode, $langcode = NULL) {
  drupal_add_css(drupal_get_path('module', 'simple_events') . '/simple_events.css');
  
  if($node->event->image){
    $logo_img = theme('image', array('path' => $node->event->image->uri, 'attributes' => array('class' => 'event-image')));
  }
  else{
    $logo_img = theme('image', array('path' => drupal_get_path('module', 'simple_events') . '/simple_events-placeholder.png', 'attributes' => array('class' => 'event-image')));
  }
  $node->content['logo'] = array(
    '#markup' =>  $logo_img,
    '#weight' => 1,
  );
  
  if(!empty($node->event->url)){
    $node->content['url'] = array(
      '#markup' =>  l(t('Event website'), $node->event->url, array('attributes' => array('rel' => 'nofollow'))),
      '#weight' => 1,
    );
  }

  $node->content['address'] = array(
    '#markup' =>  check_plain($node->event->address),
    '#weight' => 1,
  );

  return $node;
}


