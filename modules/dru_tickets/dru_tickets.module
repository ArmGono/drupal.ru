<?php

/**
 * Implements hook_permission().
 */
function dru_tickets_permission() {
  return array(
    'view tickets'     => array(
      'title'           => t('View Tickets'),
      'description'     => t('Allow users to view tickets'),
      'restrict access' => TRUE,
    ),
    'create tickets'   => array(
      'title'           => t('Create Tickets'),
      'description'     => t('Allow users to create tickets'),
    ),
    'moderate tickets' => array(
      'title'           => t('Moderate Tickets'),
      'description'     => t('Allow users to moderate tickets'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dru_tickets_menu() {
  
  $items['admin/content/tickets'] = array(
    'title'            => 'Tickets',
    'description'      => 'Tickets page',
    'page callback'    => 'dru_tickets_page',
    'access arguments' => array('view tickets'),
    'file'             => 'dru_tickets.pages.inc',
  );
  $items['ticket/%node/accept/%'] = array(
    'page callback'    => 'dru_ticket_accept',
    'file'             => 'dru_tickets.pages.inc',
    'page arguments'   => array(1, 3),
    'access arguments' => array('moderate tickets'),
    'type'             => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implements hook_node_info()
 */
function dru_tickets_node_info() {
  return array(
    'ticket' => array(
      'name' => t('Ticket'),
      'base' => 'dru_tickets',
      'description' => t('Claim rules violation or unacceptable behaviour.'),
      'has_title' => FALSE,
    )
  );
}


/**
 * Implement hook_load()
 */

function dru_tickets_load($nodes) {
  
  $nids = array_keys($nodes);
  
  $result = db_query('SELECT * FROM {ticket} WHERE ticket_id IN (:nids)', array(':nids' => $nids));
  foreach ($result as $record) {
    $nodes[$record->ticket_id]->ticket = $record;
  }
}


/**
 * Implement hook_insert()
 */
function dru_tickets_insert($node) {
  db_insert('ticket')
    ->fields(array(
      'ticket_id' => $node->nid,
      'moderate_uid' => 0,
      'ticket_verdict' => '',
    ))
    ->execute();
}

/**
 * Implement hook_update()
 */

function dru_tickets_update($node) {
  
  db_update('ticket')
    ->fields(array(
      'ticket_id' => $node->nid,
      'moderate_uid' => $node->ticket->moderate_uid,
      'ticket_verdict' => $node->ticket->ticket_verdict,
    ))
    ->condition('ticket_id', $node->nid)
    ->execute();
}


/**
 * Implement hook_view()
 */
function dru_tickets_view($node, $view_mode, $langcode = NULL) {
  $node->content['test'] = array(
    '#markup' =>  'test',
    '#weight' => 1,
  );

  if (!empty($node->ticket->moderate_uid)){
    $author = user_load($node->ticket->moderate_uid); 
    $moderator = l($author->name, 'user/' . $author->uid);
  }else{
    $moderator = t('No taken yet');
  }
    
  $node->content['moderator'] = array(
    '#markup' => '<div class="moderator">
      <div class="label">' . t('Moderator') . ':/div>
      <div class="value">' . $moderator . '</div>
    </div>',
  );
      
  drupal_set_message('<pre>' . print_r($node,true). '</pre>');
  return $node;  
}

/**
 * Implements hook_node_view().
 */
function dru_tickets_node_view($node, $view_mode) {
  if($node->type == 'ticket' && $node->ticket->moderate_uid == 0 && user_access('moderate tickets')){
    $token = drupal_get_token('dru_tickets');
    $node->content['links']['comment']['#links']['ticket-assign'] = array(
      'title' => t('Accept'),
      'href' => 'ticket/' . $node->nid . '/accept' . '/' . $token,
      'attributes' => array(
        'class' => array('ticket-accept'),
      ),
    );
  }
}

/**
 * Implements hook_init().
 */
function dru_tickets_init() {
  drupal_add_css(drupal_get_path('module', 'dru_tickets') . '/dru_tickets.css');
}
