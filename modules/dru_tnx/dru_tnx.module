<?php

/**
 * Implements hook_permission().
 */
function dru_tnx_permission() {
  return array(
    'tnx' => array(
      'title'       => t('Thank'),
      'description' => t('Allow users thank content'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function dru_tnx_menu() {
  $items['tnx/node/nojs/%node'] = array(
    'page callback'    => 'dru_tnx_node',
    'file'             => 'dru_tnx.pages.inc',
    'page arguments'   => array(0, 2, 3),
    'access arguments' => array('tnx'),
    'type'             => MENU_CALLBACK,
  );
  $items['tnx/node/ajax/%node'] = array(
    'page callback'     => 'dru_tnx_node',
    'file'              => 'dru_tnx.pages.inc',
    'page arguments'    => array(0, 2, 3),
    'access arguments'  => array('tnx'),
    'delivery callback' => 'ajax_deliver',
    'type'              => MENU_CALLBACK,
  );
  $items['tnx/comment/nojs/%comment'] = array(
    'page callback'    => 'dru_tnx_comment',
    'file'             => 'dru_tnx.pages.inc',
    'page arguments'   => array(0, 2, 3),
    'access arguments' => array('tnx'),
    'type'             => MENU_CALLBACK,
  );
  $items['tnx/comment/ajax/%comment'] = array(
    'page callback'     => 'dru_tnx_comment',
    'file'              => 'dru_tnx.pages.inc',
    'page arguments'    => array(0, 2, 3),
    'access arguments'  => array('tnx'),
    'delivery callback' => 'ajax_deliver',
    'type'              => MENU_CALLBACK,
  );
  $items['untnx/node/nojs/%node'] = array(
    'page callback'    => 'dru_tnx_node',
    'file'             => 'dru_tnx.pages.inc',
    'page arguments'   => array(0, 2, 3),
    'access arguments' => array('tnx'),
    'type'             => MENU_CALLBACK,
  );
  $items['untnx/node/ajax/%node'] = array(
    'page callback'     => 'dru_tnx_node',
    'file'              => 'dru_tnx.pages.inc',
    'page arguments'    => array(0, 2, 3),
    'access arguments'  => array('tnx'),
    'delivery callback' => 'ajax_deliver',
    'type'              => MENU_CALLBACK,
  );
  $items['untnx/comment/nojs/%comment'] = array(
    'page callback'    => 'dru_tnx_comment',
    'file'             => 'dru_tnx.pages.inc',
    'page arguments'   => array(0, 2, 3),
    'access arguments' => array('tnx'),
    'type'             => MENU_CALLBACK,
  );
  $items['untnx/comment/ajax/%comment'] = array(
    'page callback'     => 'dru_tnx_comment',
    'file'              => 'dru_tnx.pages.inc',
    'page arguments'    => array(0, 2, 3),
    'access arguments'  => array('tnx'),
    'delivery callback' => 'ajax_deliver',
    'type'              => MENU_CALLBACK,
  );
  
  return $items;
}

/**
 * Implements hook_node_view().
 */
function dru_tnx_node_view($node, $view_mode) {
    
  global $user;
    
  // Add node links
  drupal_add_library('system', 'drupal.ajax');
  
  $tnx = get_user_tnx('node', $node->nid, $user->uid);
  
  if(user_access('tnx') && $node->uid !== $user->uid){
    $node->content['links']['comment']['#links']['dru-tnx'] = dru_tnx_link($node, 'node', $node->nid, $tnx);
  }
  
}

/**
 * Implements hook_comment_view().
 */
function dru_tnx_comment_view($comment, $view_mode) {
    
  global $user;
  
  // Add comment links
  drupal_add_library('system', 'drupal.ajax');
  
  $tnx = get_user_tnx('comment', $comment->cid, $user->uid);
  
  if(user_access('tnx') && $comment->uid !== $user->uid){
    $comment->content['links']['comment']['#links']['dru-tnx'] = dru_tnx_link($comment, 'comment', $comment->cid, $tnx);
  }
}

/**
 * Implementation dru_tnx_link().
 *
 * Return array.
 */
function dru_tnx_link($entity, $entity_type, $entity_id, $tnx) {
  
  $tnx_action = $tnx ? 'tnx' : 'untnx';
  $type = $entity_type;
  
  return array(
    'title'      => $tnx ? t('@count Tnx +1', array('@count' => $entity->tnx)) : t('@count UnTnx -1', array('@count' => $entity->tnx)),
    'href'       => $tnx_action . '/' . $type . '/nojs/' . $entity_id,
    'query'      => drupal_get_destination(),
    'attributes' => array(
      'class' => array(
        'use-ajax',
        'dru-thanks',
        'dru-' . $tnx_action,
        'dru-tnx-' . $type,
        'dru-tnx-' . $type . '-' . $entity_id
      ),
    ),
  );
}

/**
 * Implementation get_user_tnx().
 *
 * Return Boolean TRUE if user alredy have thanked.
 */
function get_user_tnx($entity_type, $entity_id, $uid) {
  
  $tnx = db_select('tnx', 't')
       ->fields('t', array('id'))
       ->condition('t.entity_type', $entity_type)
       ->condition('t.entity_id', $entity_id)
       ->condition('t.uid', $uid)
       ->execute()
       ->fetchAll();
       
  return empty($tnx) ? 1 : 0;
  
}

/**
 * Implementation get_tnx_by_id().
 *
 * Return UID list.
 */
function get_tnx_by_id($entity_type, $entity_id) {
  
  $users = db_select('tnx', 't')
       ->fields('t', array('uid'))
       ->condition('t.entity_type', $entity_type)
       ->condition('t.entity_id', $entity_id)
       ->execute();
  
  $result = array();
  foreach ($users as $user) {
    $result[] = $user->uid;
  }
  
  return $result;
  
}

/**
 * Implementation get_tnx_by_uid().
 *
 * Return Entity ID list.
 */
function get_tnx_by_uid($entity_type, $uid) {
  
  $tnxs = db_select('tnx', 't')
       ->fields('t', array('entity_id'))
       ->condition('t.entity_type', $entity_type)
       ->condition('t.uid', $uid)
       ->execute();
  
  $result = array();
  $id = $entity_type == 'node' ? 'nid' : 'cid';
  foreach ($tnxs as $tnx) {
    $result[] = $tnx->entity_id;
  }
  
  return $result;
  
}

/**
 * Implements hook_init().
 */
function dru_tnx_init() {
  drupal_add_css(drupal_get_path('module', 'dru_tnx') . '/dru_tnx.css');
}
